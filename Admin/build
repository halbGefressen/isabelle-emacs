#!/usr/bin/env bash
#
# Administrative build for Isabelle source distribution.

## directory layout

if [ -z "$ISABELLE_HOME" ]; then
  unset CDPATH
  ISABELLE_HOME="$(cd "$(dirname "$0")"; cd "$(pwd -P)"; cd ..; pwd)"
  ISABELLE_TOOL="$ISABELLE_HOME/bin/isabelle"
fi


## diagnostics

PRG="$(basename "$0")"

function usage()
{
  cat <<EOF

Usage: $PRG [MODULES]

  Produce Isabelle distribution modules from current repository sources.
  The MODULES list may contain any of the following:

    jars            Isabelle/Scala
    jars_fresh      fresh build of jars

EOF
  exit 1
}

function fail()
{
  echo "$1" >&2
  exit 2
}


## process command line

[ "$#" -eq 0 ] && usage

MODULES="$@"; shift "$#"


## modules

function build_setup ()
{
  rm -rf \
    "$ISABELLE_HOME/lib/classes/Pure.jar" \
    "$ISABELLE_HOME/lib/classes/Pure.shasum" \
    "$ISABELLE_HOME/src/Tools/jEdit/dist"
  env ISABELLE_SETUP_CLASSPATH_SKIP=true "$ISABELLE_TOOL" java isabelle.setup.Setup "$@"
}


## main

for MODULE in $MODULES
do
  case $MODULE in
    jars) build_setup build;;
    jars_fresh) build_setup build_fresh;;
    *) fail "Bad module $MODULE"
  esac
done
